{"version":3,"sources":["components/calculator.component.js","reducers/loginReducer.js","reducers/todoReducer.js","reducers/index.js","store/store.js","config/weburl.js","config/axiosConfig.js","components/login.component.js","components/signup.component.js","components/profile.component.js","components/about.component.js","actions/pupulate.action.js","components/todo.component.js","route/index.js","components/GoogleAuth.js","RouteManagement/PrivateRoute.js","RouteManagement/PublicRoute.js","App.js","serviceWorker.js","index.js"],"names":["calculator","props","insertHandler","e","state","error","setState","expression","length","target","name","clearInput","backspaceHandler","substring","computeHandler","eval","this","id","className","onClick","Component","userModel","firstname","lastname","email","image","initialState","loginReducer","action","type","user","payload","todoModel","uuid","title","todoReducer","todo","map","filter","combineReducers","login_data","todos","store","createStore","reducers","applyMiddleware","thunkMiddleware","axiosDefaultConfig","baseUrl","headers","Accept","responseType","httpRequest","options","data","url","method","axiosOption","authToken","localStorage","getItem","createConfig","axios","Login","inputChangeHandler","value","onSignInClick","a","preventDefault","auth","signIn","history","access_token","currentUser","get","wc","user_info","rt","setItem","JSON","stringify","tV","uT","$t","TJ","saveUser","push","clickedSubmitButton","formData","Error","console","log","message","password","inputRef","React","createRef","current","focus","window","gapi","load","client","init","clientId","googleKeys","web","client_id","scope","then","auth2","getAuthInstance","onChange","placeholder","ref","htmlFor","href","connect","dispatch","SignUp","res_data","msg","profile","clickedLogoutButton","clear","isSignedIn","signOut","src","alt","width","height","about","populateAction","getState","resp","start_index","Math","floor","random","end_index","newArray","slice","userId","body","rest","Todo","showEdit","inputHandler","submitHandler","createTodo","deleteTodoHandler","deleteTodo","editTodoHandler","editSubmitHandler","updateTodo","populateDataHandler","populateTodo","onSubmit","style","marginBottom","disabled","paddingRight","listStyleType","paddingLeft","idx","key","defaultValue","hidden","routes","path","urls","exact","isProtected","component","About","Profile","Calculator","PrivateRoute","isAuth","render","routeProps","to","PublicRoute","location","pathname","App","parse","_","route","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.58c70aae.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class calculator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        expression: \"\",\n        error: \"\"\n      };\n    };\n\n    insertHandler = (e) => {\n        this.state.error && this.setState({error: \"\"});\n        this.state.expression.length < 15 && this.setState({expression: this.state.expression + e.target.name});\n    };\n\n    clearInput = (e) => {\n        this.setState({expression: \"\", error: \"\"});\n    };\n\n    backspaceHandler = (e) => {\n        this.state.error && this.setState({error: \"\"});\n        this.setState({expression: this.state.expression.substring(0, this.state.expression.length-1)});\n    };\n\n    computeHandler = (e) => {\n        try {\n            this.setState({expression: `${eval(this.state.expression)}`.substring(0,15)});\n        } catch {\n            this.setState({expression: \"\", error: \"Invalid input !!!\"});\n        }\n    };\n    \n    render() {\n        const { expression, error } = this.state;\n        return (\n            <div id=\"bg-body\">\n                <h2 className=\"aboutus-title\">Calculator</h2>\n                <div className=\"main-container\">\n                    <div className=\"calc-container\">\n                        <div id=\"input\">\n                            {error && <h6 id=\"error\">{error}</h6>}\n                            {expression}\n                        </div>\n                        <div id='buttons-container'>\n\n                            <button className=\"btn_calc btn-operator \" onClick={this.clearInput}><i className=\"far fa-trash-alt\"></i></button>\n                            <button className=\"btn_calc btn-operator \" onClick={this.backspaceHandler}><i className=\"fas fa-backspace\"></i></button>\n                            <button className=\"btn_calc btn-operator \" name={'/'} onClick={this.insertHandler}><i className=\"fas fa-divide\"></i></button>\n                            <button className=\"btn_calc btn-operator \" name={'*'} onClick={this.insertHandler}><i className=\"fas fa-times\"></i></button>\n\n                            <button className=\"btn_calc btn-num\" name={'7'} onClick={this.insertHandler}>7</button>\n                            <button className=\"btn_calc btn-num\" name={'8'} onClick={this.insertHandler}>8</button>\n                            <button className=\"btn_calc btn-num\" name={'9'} onClick={this.insertHandler}>9</button>\n                            <button className=\"btn_calc btn-operator \" name={'-'} onClick={this.insertHandler}><i className=\"fas fa-minus\"></i></button>\n\n                            <button className=\"btn_calc btn-num\" name={'4'} onClick={this.insertHandler}>4</button>\n                            <button className=\"btn_calc btn-num\" name={'5'} onClick={this.insertHandler}>5</button>\n                            <button className=\"btn_calc btn-num\" name={'6'} onClick={this.insertHandler}>6</button>\n                            <button className=\"btn_calc btn-operator \" name={'+'} onClick={this.insertHandler}><i className=\"fas fa-plus\"></i></button>\n\n                            <button className=\"btn_calc btn-num\" name={'1'} onClick={this.insertHandler}>1</button>\n                            <button className=\"btn_calc btn-num\" name={'2'} onClick={this.insertHandler}>2</button>\n                            <button className=\"btn_calc btn-num\" name={'3'} onClick={this.insertHandler}>3</button>\n                            <button className=\"btn_calc btn-operator equal \" onClick={this.computeHandler}><i className=\"fas fa-equals\"></i></button>\n                            <button className=\"btn_calc btn-num dot\" name={'0'} onClick={this.insertHandler}>0</button>\n                            <button className=\"btn_calc btn-num\" name={'.'} onClick={this.insertHandler}>.</button>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div id=\"color-change\" className=\"btn\"><i className=\"fas fa-palette\"></i></div>\n            </div>\n        )\n    }\n}\n\nexport default calculator\n","export const SAVE_USER = '@@user/save';\n\nconst userModel = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    image: ''\n}\n\nconst initialState = {};\n\nconst loginReducer = function(state, action) {\n    state = state || initialState;\n\n    switch (action.type) {\n        case SAVE_USER:\n            const user = {\n                ...userModel, \n                firstname: action.payload.firstname, \n                lastname: action.payload.lastname, \n                email: action.payload.email,\n                image: action.payload.image\n            };\n            // return user;\n            return {...state, ...user};\n        default:\n            return state;\n    }\n};\n\nexport default loginReducer;","import { v4 as uuid } from 'uuid';\n\nconst STATUS = {\n    PENDING: 0,\n    DONE: 1,\n    DELETED: 2\n};\n\nexport const CREATE_TODO = '@@todo/create';\nexport const UPDATE_TODO = '@@todo/update';\nexport const DELETE_TODO = '@@todo/delete';\nexport const POPULATE_TODO = '@@todo/populate';\n\nconst todoModel = {\n    id: uuid(),\n    title: '',\n    state: STATUS.PENDING\n}\n\nconst initialState = [];\n\nconst todoReducer = function(state, action) {\n    state = state || initialState;\n\n    switch (action.type) {\n        case CREATE_TODO:\n            const todo = {...todoModel, title: action.payload, id: uuid()};\n            return [...state, todo];\n        case UPDATE_TODO:\n            // wrong way (don't mutate state directly) ------>\n            // let todo_idx = state.findIndex( todo => todo.id === action.payload.id);\n            // state[todo_idx] = {...state[todo_idx], title: action.payload.title};\n            // return state;\n            let todo_list = state.map( todo => {\n                if(todo.id === action.payload.id) {\n                    return {\n                        ...todo, title: action.payload.title\n                    }\n                }\n                return todo;\n            });\n            return todo_list;\n        case DELETE_TODO:\n            const todos = state.filter( todo => todo.id !== action.payload)\n            return todos;\n        case POPULATE_TODO:\n            // console.log('payload --> ', action.payload);\n            return [...state, ...action.payload];\n        default:\n            return state;\n    }   \n};\n\nexport default todoReducer;","import { combineReducers } from 'redux';\nimport loginReducer from './loginReducer';\nimport todoReducer from './todoReducer';\n\nexport default combineReducers({\n    login_data: loginReducer,\n    todos: todoReducer,\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'\n\nimport reducers from '../reducers';\n\nconst store = createStore(\n    reducers,\n    applyMiddleware(\n        thunkMiddleware\n    )\n);\n\nexport default store;","export default {\n    home: '/',\n    signIn: '/sign-in',\n    signUp: '/sign-up',\n    profile: '/profile',\n    calculator: '/calculator',\n    todo: '/todos'\n};","import axios from 'axios';\n\nconst axiosDefaultConfig = {\n    baseUrl: 'https://react-demo-login-signup.herokuapp.com/',\n    // baseUrl: 'https://localhost:5000/',\n    headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        Accept: 'application/json'\n    },\n    responseType: 'json'\n};\n\nconst createConfig = () => {\n    const authToken = localStorage.getItem('access_token');\n    const isAuth = !!authToken;\n    if(isAuth) {\n        axiosDefaultConfig.headers['Authorization'] = `Bearer ${authToken}`;\n    };\n    return axiosDefaultConfig;\n};\n\nconst httpRequest = (options) => {\n    const { data, url, method } = options;\n    const axiosOption = createConfig();\n    return axios({\n        method,\n        url,\n        data,\n        ...axiosOption\n    });\n};\n\nexport default httpRequest;","import React, { Component } from \"react\";\nimport { httpRequest } from '../config';\nimport { connect } from 'react-redux';\nimport { SAVE_USER } from '../reducers/loginReducer';\nimport googleKeys from '../config/google.json';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: ''\n        };\n        this.inputRef = React.createRef();\n    };\n\n    componentDidMount() {\n        this.inputRef.current.focus();\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client\n                .init({\n                    clientId: googleKeys.web.client_id,\n                    // scope: 'email profile openid https://www.googleapis.com/auth/youtube',\n                    scope: 'email profile openid',\n                })\n                .then(() => {\n                    this.auth = window.gapi.auth2.getAuthInstance();\n                    // console.dir(this.auth.currentUser.get())\n                    // this.onAuthChange(this.auth.isSignedIn.get());\n                    // this.auth.isSignedIn.listen(this.onAuthChange);\n                });\n        });\n    };\n\n    inputChangeHandler = (e) => {\n        // console.log('change handler triggered');\n        this.setState({\n            [e.target.name]: e.target.value\n        }, () => {\n            // console.log(this.state);\n        });\n    };\n\n    onSignInClick = async (e) => {\n        e.preventDefault();\n        await this.auth.signIn();\n        const { history } = this.props;\n        // console.log(this.auth.currentUser.get().getId());\n        // console.log(this.auth.currentUser.get());\n        let access_token = this.auth.currentUser.get().wc.access_token;\n        let user_info = this.auth.currentUser.get().rt;\n        localStorage.setItem('access_token', access_token);\n        localStorage.setItem('user_info', JSON.stringify({firstname: user_info.tV, lastname: user_info.uT, email: user_info.$t, image: user_info.TJ}));\n        this.props.saveUser(user_info.tV, user_info.uT, user_info.$t, user_info.TJ);\n        history.push('/profile');\n    }\n\n    clickedSubmitButton = async (e) => {\n        e.preventDefault();\n        // console.log('submit button clicked');\n        const formData = this.state;\n        // console.log('form data --> ', formData);\n        const { history } = this.props;\n        try {\n            let user = await httpRequest({\n                method: 'POST',\n                // url: 'http://localhost:5000/login',\n                url:'/login',\n                //   url:'https://react-demo-login-signup.herokuapp.com/login',\n                data: formData\n            });\n            if (user.data.error) {\n                throw new Error(user.data.error)\n            };\n            // console.log('response data --> ', user.data);\n            localStorage.setItem('access_token', user.data.access_token);\n            localStorage.setItem('user_info', JSON.stringify(user.data.user));\n            this.props.saveUser(user.data.user.firstname, user.data.user.lastname, user.data.user.email, user.data.user.image);\n            history.push('/profile');\n        } catch (err) {\n            console.log('login error --> ', err.message);\n            this.setState({ error: err.message });\n        }\n    }\n    render() {\n        const { email, password, error } = this.state;\n        return (\n            <form>\n                <h3>Sign In</h3>\n                {error && <h6 id=\"error\">{error}</h6>}\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.inputChangeHandler} placeholder=\"Enter email\" ref={this.inputRef} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={password} onChange={this.inputChangeHandler} placeholder=\"Enter password\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.clickedSubmitButton}>Submit</button>\n                <br />\n                <button onClick={this.onSignInClick} className=\"btn btn-primary btn-block\">\n                    Sign In with Google\n                 </button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"/sign-in\">password?</a>\n                </p>\n            </form>\n        );\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        saveUser: (firstname, lastname, email, image) => dispatch({ type: SAVE_USER, payload: { firstname, lastname, email, image } })\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","import React, { Component } from \"react\";\nimport { httpRequest } from '../config';\n\nexport default class SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        error: ''\n      };\n      this.inputRef = React.createRef();\n    };\n\n    componentDidMount() {\n        this.inputRef.current.focus();\n    };\n\n    inputChangeHandler = (e) => {\n    console.log('change handler triggered');\n    this.setState({\n        [e.target.name]: e.target.value\n    },() => {\n        console.log(this.state);\n    });\n    };\n\n    clickedSubmitButton = async (e) => {\n        e.preventDefault();\n        console.log('submit button clicked');\n        const formData = this.state;\n        console.log('form data --> ', formData);\n        const { history } = this.props;\n        try {\n            let res_data = await httpRequest({\n              method:'POST',\n            //   url:'http://localhost:5000/signup',\n              url:'/signup',\n            //   url:'https://react-demo-login-signup.herokuapp.com/signup',\n              data:formData\n            });\n            console.log('response data --> ', res_data.data.msg);\n            history.push('/sign-in');\n          } catch (error) {\n            console.log('signup error --> ', error);\n            this.setState({error:'error occured !!!'});\n          }\n      }\n\n    render() {\n        const { firstname, lastname, email, password, error } = this.state;\n        return (\n            <form>\n                <h3>Sign Up</h3>\n                {error && <h6 id=\"error\">{error}</h6>}\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input name=\"firstname\" type=\"text\" className=\"form-control\" value={firstname} onChange={this.inputChangeHandler} placeholder=\"First name\" ref={this.inputRef}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Last name</label>\n                    <input name=\"lastname\" type=\"text\" className=\"form-control\" value={lastname} onChange={this.inputChangeHandler} placeholder=\"Last name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.inputChangeHandler} placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={password} onChange={this.inputChangeHandler} placeholder=\"Enter password\" />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.clickedSubmitButton}>Sign Up</button>\n                <p className=\"forgot-password text-right\">\n                    Already registered <a href=\"sign-up\">sign in?</a>\n                </p>\n            </form>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport googleKeys from '../config/google.json';\n\nexport class profile extends Component {\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n          window.gapi.client\n            .init({\n              clientId: googleKeys.web.client_id,\n              scope: 'email profile openid',\n            })\n            .then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n            });\n        });\n      }\n\n    clickedLogoutButton = async (e) => {\n        e.preventDefault();\n        console.log('logout button clicked');\n        const { history } = this.props;\n        localStorage.clear();\n        if (this.auth.isSignedIn.get()) {\n            this.auth.signOut();\n        };\n        history.push('/sign-in');\n      }\n    render() {\n        // data coming from redux store\n        const { user_info } = this.props;\n        console.log('userdata from redux store --> ', user_info);\n\n        // let user_info = JSON.parse(localStorage.getItem('user_info'));\n        let firstname, lastname, email, image;\n        if (user_info) {\n            firstname = user_info.firstname;\n            lastname = user_info.lastname;\n            email = user_info.email;\n            image = user_info.image;\n        };\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"span4 well\">\n                        <div className=\"row\">\n                            <div className=\"span1\" id=\"img\"><img src={image} alt=\"\" width=\"100px\" height=\"100px\"/></div>\n                                <div className=\"span3\">\n                                    <p>{email}</p>\n                                    <p><strong>{`${firstname} ${lastname}`}</strong></p>\n                                    <span className=\" badge badge-warning\">8 messages</span> <span className=\" badge badge-info\">15 followers</span>\n                                </div>\n                                <button id=\"logout\" type=\"button\" className=\"btn btn-danger btn-block btn-sm\" onClick={this.clickedLogoutButton}>Sign Out</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    // console.log(state.login_data);\n    return {\n        user_info: state.login_data\n    }\n};\n\nexport default connect(mapStateToProps)(profile);\n","import React, { Component } from 'react'\n\nexport class about extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"span4 well\">\n                        <div className=\"row\">\n                            <div className=\"aboutus\">\n                                <h2 className=\"aboutus-title\">About Us</h2>\n                                <p className=\"aboutus-text\">Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in.</p>\n                                <p className=\"aboutus-text\">This is Photoshop's version of Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem</p>\n                                <a className=\"aboutus-more\" href=\"/\">read more</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default about\n","import axios from 'axios';\nimport { POPULATE_TODO } from '../reducers/todoReducer';\nimport { v4 as uuid } from 'uuid';\n\nexport const populateAction = {\n    fetchList: () => (dispatch,getState) => {\n        // console.log('redux previous state --> ', getState());\n        axios({\n            method:'GET',\n            url:'https://jsonplaceholder.typicode.com/posts'\n        })\n        .then(resp=>{\n            let start_index = Math.floor(Math.random() * 10);\n            let end_index = start_index + 5;\n            let data_arr = resp.data.slice(start_index, end_index);\n            const newArray = data_arr.map(({id, userId, body, ...rest}) => {\n                return {...rest, id: uuid()}\n            })\n            dispatch({type:POPULATE_TODO, payload:newArray});\n        })\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { CREATE_TODO, UPDATE_TODO, DELETE_TODO } from '../reducers/todoReducer';\nimport { populateAction } from '../actions/pupulate.action';\n\nclass Todo extends React.Component {\n    state = {\n        title: '',\n        showEdit: {}\n    };\n\n    inputHandler = (e) => {\n        this.setState({\n            title: e.target.value\n        });\n    };\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        // this.props.dispatch({\n        //   type: CREATE_TODO,\n        //   payload: this.state.title\n        // });\n        this.props.createTodo(this.state.title);\n        this.setState({ title: '' });\n    };\n\n    deleteTodoHandler = (id) => {\n        this.props.deleteTodo(id);\n    };\n\n    editTodoHandler = (id) => {\n        this.setState({ showEdit: {...this.state.showEdit, [id]: true} });\n    };\n\n    editSubmitHandler = (e) => {\n        e.preventDefault();\n        this.props.updateTodo(e.target.id.value, e.target.title.value);\n        this.setState({ showEdit: {...this.state.showEdit, [e.target.id.value]: false} });\n    };\n\n    populateDataHandler = (e) => {\n        e.preventDefault();\n        this.props.populateTodo();\n    }\n\n    render() {\n        const { todos } = this.props;\n        const { title } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"span4 well\">\n                        <div className=\"row\">\n                            <div className=\"aboutus\">\n                                <h2 className=\"aboutus-title\">Todos</h2>\n                                <div>\n                                    <form onSubmit={this.submitHandler}>\n                                        <input type='text' name='title' value={title} onChange={this.inputHandler} style={{ width: '300px', marginBottom: '20px' }} placeholder='Add a new todo' />\n                                        <button type='submit' className=\"btn fas fa-plus\" title=\"add\" disabled={!title} style={{paddingRight: '0px'}}></button>\n                                        <button className=\"btn fas fa-angle-double-down\" title=\"populate\" disabled={title} onClick={this.populateDataHandler}></button>\n                                    </form>\n                                </div>\n                                <div>\n                                    <ul style={{ listStyleType: 'none', paddingLeft: '0px' }}>\n                                        {\n                                            todos.map((todo, idx) => {\n                                                return (\n                                                    <Fragment key={idx}>\n                                                        {\n                                                            this.state.showEdit[todo.id] ?\n                                                                <form onSubmit={this.editSubmitHandler}>\n                                                                    <input type='text' name='title' defaultValue={todo.title} style={{ width: '300px' }} />\n                                                                    <input type='text' name='id' defaultValue={todo.id} hidden/>\n                                                                    <button type='submit' className=\"btn fas fa-pencil-alt\" title=\"edit\" disabled={false}></button>\n                                                                </form> :\n                                                                <li onClick={() => this.editTodoHandler(todo.id)}>\n                                                                    <button className=\"btn far fa-trash-alt\" title=\"delete\" onClick={() => this.deleteTodoHandler(todo.id)} style={{ paddingRight: '20px' }}></button>\n                                                                    {todo.title}\n                                                                </li>\n                                                        }\n                                                    </Fragment>\n                                                );\n                                            })\n                                        }\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        todos: state.todos\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createTodo: (title) => dispatch({ type: CREATE_TODO, payload: title }),\n        deleteTodo: (id) => dispatch({ type: DELETE_TODO, payload: id }),\n        updateTodo: (id, title) => dispatch({ type: UPDATE_TODO, payload: {id, title} }),\n        populateTodo: () => dispatch(populateAction.fetchList())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n","// method 1 (importing directly from components) ----->\n// import Login from \"../components/login.component\";\n// import SignUp from \"../components/signup.component\";\n\n\n// method 2 (importing in index.js of components and exporting from there) ----->\n// import { Login, SignUp } from \"../components/index\";\n\n\n//method 3 (directly exporting from index.js of components) ----->\nimport { Login, SignUp, About, Profile, Calculator, Todo } from \"../components\";\n\nimport {urls} from \"../config\";\n\nconst routes = [\n    {\n        path: urls.home,\n        exact: true,\n        isProtected: false,\n        component: About\n    },\n    {\n        path: urls.signIn,\n        exact: true,\n        isProtected: false,\n        component: Login\n    },\n    {\n        path: urls.signUp,\n        exact: true,\n        isProtected: false,\n        component: SignUp\n    },\n    {\n        path: urls.profile,\n        exact: true,\n        isProtected: true,\n        component: Profile\n    },\n    {\n        path: urls.calculator,\n        exact: true,\n        isProtected: true,\n        component: Calculator\n    },\n    {\n        path: urls.todo,\n        exact: true,\n        isProtected: true,\n        component: Todo\n    }\n];\n\nexport default routes;","\n\n\n// |---------------------------------------------------------------------------------------|\n// <---------------------------------- Demo file not used --------------------------------->\n// |---------------------------------------------------------------------------------------|\n\n\n\nimport React from 'react';\nimport googleKeys from '../config/google.json';\n\nclass GoogleAuth extends React.Component {\n  state = {\n    loggedIn: false\n  }\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId: googleKeys.web.client_id,\n          // scope: 'email profile openid https://www.googleapis.com/auth/youtube',\n          scope: 'email profile openid',\n        })\n        .then(() => {\n            this.auth = window.gapi.auth2.getAuthInstance();\n            // console.dir(this.auth.currentUser.get())\n            this.onAuthChange(this.auth.isSignedIn.get());\n            // this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = isSignedIn => {\n    console.log('signed in --> ',isSignedIn);\n    this.setState({\n      loggedIn: isSignedIn\n    });\n    if (isSignedIn) {\n      console.log(this.auth.currentUser.get().getId());\n    } else {\n      this.onSignOutClick();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    localStorage.clear();\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.state.loggedIn === null) {\n      return null;\n    } else if (this.state.loggedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"btn btn-danger btn-block\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"btn btn-primary btn-block\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nexport default GoogleAuth;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { urls } from '../config';\nconst PrivateRoute = (props) => {\n  const { component: Component, ...rest } = props;\n  const isAuth = !!localStorage.getItem('access_token');\n  return (\n    <Route\n      {...rest}\n      render={(routeProps)=> {\n        return(\n          isAuth ?\n            <Component {...rest}  {...routeProps} /> :\n            <Redirect to={urls.signIn} />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { urls } from '../config';\n\nconst PublicRoute = (props) => {\n  const { component: Component, ...rest } = props;\n  const isAuth = !!localStorage.getItem('access_token');\n  return (\n    <Route\n      {...rest}\n      render={(routeProps)=> {\n        if (routeProps.location.pathname === urls.home) {\n            return (\n                <Component {...rest}  {...routeProps} />\n            )\n        } else {\n            return(\n            isAuth ?\n                <Redirect to={urls.profile} /> :\n                <Component {...rest}  {...routeProps} />\n            );\n        }\n      }}\n    />\n  );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { urls } from './config';\nimport { connect } from 'react-redux';\nimport { SAVE_USER } from './reducers/loginReducer';\n\nimport routes from './route/index';\nimport { PublicRoute, PrivateRoute } from './RouteManagement';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    let user_info = JSON.parse(localStorage.getItem('user_info'));\n    if (user_info) {\n        let firstname = user_info.firstname;\n        let lastname = user_info.lastname;\n        let email = user_info.email;\n        let image = user_info.image;\n        this.props.saveUser(firstname, lastname, email, image);\n    };\n};\n  render() {\n    return (<Router>\n      <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to={urls.home}>React Demo App</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={urls.home}>About</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={urls.profile}>Profile</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={urls.calculator}>Calculator</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={urls.todo}>Todos</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={urls.signIn}>Sign In</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={urls.signUp}>Sign Up</Link>\n                </li>\n                <li className=\"nav-item\">\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"auth-wrapper\">\n          <div className=\"auth-inner\">\n            <Switch>\n              {\n                _.map(routes, (route, idx) => {\n                  return (\n                    route.isProtected ?\n                      <PrivateRoute key={idx} {...route} /> :\n                      <PublicRoute key={idx} {...route} />\n                  )\n                })\n              }\n            </Switch>\n          </div>\n        </div>\n      </div></Router>\n    );\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      saveUser: (firstname, lastname, email, image) => dispatch({ type: SAVE_USER, payload: {firstname, lastname, email, image} })\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}