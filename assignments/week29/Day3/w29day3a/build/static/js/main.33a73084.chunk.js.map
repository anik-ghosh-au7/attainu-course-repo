{"version":3,"sources":["config/weburl.js","config/axiosConfig.js","components/login.component.js","components/signup.component.js","components/profile.component.js","components/about.component.js","route/index.js","RouteManagement/PrivateRoute.js","RouteManagement/PublicRoute.js","App.js","serviceWorker.js","index.js"],"names":["axiosDefaultConfig","baseUrl","headers","Accept","responseType","httpRequest","options","data","url","method","axiosOption","authToken","localStorage","getItem","createConfig","axios","Login","props","inputChangeHandler","e","console","log","setState","target","name","value","state","clickedSubmitButton","a","preventDefault","formData","history","user","error","Error","setItem","access_token","JSON","stringify","push","message","email","password","this","id","className","type","onChange","placeholder","htmlFor","onClick","href","Component","SignUp","res_data","msg","firstname","lastname","profile","clickedLogoutButton","clear","user_info","parse","src","alt","width","height","about","routes","path","urls","exact","isProtected","component","Profile","PrivateRoute","rest","isAuth","render","routeProps","to","PublicRoute","location","pathname","App","_","map","route","idx","key","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.33a73084.chunk.js","sourcesContent":["export default {\n    home: '/',\n    signIn: '/sign-in',\n    signUp: '/sign-up',\n    profile: '/profile'\n};","import axios from 'axios';\n\nconst axiosDefaultConfig = {\n    baseUrl: 'https://react-demo-login-signup.herokuapp.com/',\n    // baseUrl: 'https://localhost:5000/',\n    headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        Accept: 'application/json'\n    },\n    responseType: 'json'\n};\n\nconst createConfig = () => {\n    const authToken = localStorage.getItem('access_token');\n    const isAuth = !!authToken;\n    if(isAuth) {\n        axiosDefaultConfig.headers['Authorization'] = `Bearer ${authToken}`;\n    };\n    return axiosDefaultConfig;\n};\n\nconst httpRequest = (options) => {\n    const { data, url, method } = options;\n    const axiosOption = createConfig();\n    return axios({\n        method,\n        url,\n        data,\n        ...axiosOption\n    });\n};\n\nexport default httpRequest;","import React, { Component } from \"react\";\nimport { httpRequest } from '../config';\n\nexport default class Login extends Component {constructor(props) {\n    super(props);\n    this.state = {\n    email: '',\n    password: '',\n    error: ''\n  };\n};\ninputChangeHandler = (e) => {\nconsole.log('change handler triggered');\nthis.setState({\n    [e.target.name]: e.target.value\n},() => {\n    console.log(this.state);\n});\n};\n\nclickedSubmitButton = async (e) => {\n    e.preventDefault();\n    console.log('submit button clicked');\n    const formData = this.state;\n    console.log('form data --> ', formData);\n    const { history } = this.props;\n    try {\n        let user = await httpRequest({\n          method:'POST',\n        //   url:'http://localhost:5000/login',\n          url:'/login',\n          data:formData\n        });\n        if(user.data.error){\n            throw new Error(user.data.error)\n        };\n        console.log('response data --> ', user.data);\n        localStorage.setItem('access_token',user.data.access_token);\n        localStorage.setItem('user_info',JSON.stringify(user.data.user));\n        history.push('/profile');\n      } catch (err) {\n        console.log('login error --> ', err.message);\n        this.setState({error: err.message});\n      }\n  }\n    render() {\n        const { email, password, error } = this.state;\n        return (\n            <form>\n                <h3>Sign In</h3>\n                {error && <h6 id=\"error\">{error}</h6>}\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.inputChangeHandler} placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={password} onChange={this.inputChangeHandler} placeholder=\"Enter password\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.clickedSubmitButton}>Submit</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"/sign-in\">password?</a>\n                </p>\n            </form>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { httpRequest } from '../config';\n\nexport default class SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        error: ''\n      };\n    };\n    inputChangeHandler = (e) => {\n    console.log('change handler triggered');\n    this.setState({\n        [e.target.name]: e.target.value\n    },() => {\n        console.log(this.state);\n    });\n    };\n\n    clickedSubmitButton = async (e) => {\n        e.preventDefault();\n        console.log('submit button clicked');\n        const formData = this.state;\n        console.log('form data --> ', formData);\n        const { history } = this.props;\n        try {\n            let res_data = await httpRequest({\n              method:'POST',\n            //   url:'http://localhost:5000/signup',\n              url:'/signup',\n              data:formData\n            });\n            console.log('response data --> ', res_data.data.msg);\n            history.push('/sign-in');\n          } catch (error) {\n            console.log('signup error --> ', error);\n            this.setState({error:'error occured !!!'});\n          }\n      }\n\n    render() {\n        const { firstname, lastname, email, password, error } = this.state;\n        return (\n            <form>\n                <h3>Sign Up</h3>\n                {error && <h6 id=\"error\">{error}</h6>}\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input name=\"firstname\" type=\"text\" className=\"form-control\" value={firstname} onChange={this.inputChangeHandler} placeholder=\"First name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Last name</label>\n                    <input name=\"lastname\" type=\"text\" className=\"form-control\" value={lastname} onChange={this.inputChangeHandler} placeholder=\"Last name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.inputChangeHandler} placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={password} onChange={this.inputChangeHandler} placeholder=\"Enter password\" />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.clickedSubmitButton}>Sign Up</button>\n                <p className=\"forgot-password text-right\">\n                    Already registered <a href=\"sign-up\">sign in?</a>\n                </p>\n            </form>\n        );\n    }\n}","import React, { Component } from 'react'\n\nexport class profile extends Component {\n    clickedLogoutButton = async (e) => {\n        e.preventDefault();\n        console.log('logout button clicked');\n        const { history } = this.props;\n        localStorage.clear();\n        history.push('/sign-in');\n      }\n    render() {\n        let user_info = JSON.parse(localStorage.getItem('user_info'));\n        let firstname, lastname;\n        if (user_info) {\n            firstname = user_info.firstname;\n            lastname = user_info.lastname;\n        };\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"span4 well\">\n                        <div className=\"row\">\n                            <div className=\"span1\"><img src=\"https://res.cloudinary.com/dtappasld/image/upload/v1593208750/s9otj8t6h5qpxfmmqylp.png\" alt=\"\" width=\"100px\" height=\"100px\"/></div>\n                                <div className=\"span3\">\n                                    <p>Admin</p>\n                                    <p><strong>{`${firstname} ${lastname}`}</strong></p>\n                                    <span className=\" badge badge-warning\">8 messages</span> <span className=\" badge badge-info\">15 followers</span>\n                                </div>\n                                <button id=\"logout\" type=\"button\" className=\"btn btn-danger btn-block btn-sm\" onClick={this.clickedLogoutButton}>Logout</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default profile\n","import React, { Component } from 'react'\n\nexport class about extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"span4 well\">\n                        <div className=\"row\">\n                            <div className=\"aboutus\">\n                                <h2 className=\"aboutus-title\">About Us</h2>\n                                <p className=\"aboutus-text\">Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in.</p>\n                                <p className=\"aboutus-text\">This is Photoshop's version of Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem</p>\n                                <a className=\"aboutus-more\" href=\"/\">read more</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default about\n","// method 1 (importing directly from components) ----->\n// import Login from \"../components/login.component\";\n// import SignUp from \"../components/signup.component\";\n\n\n// method 2 (importing in index.js of components and exporting from there) ----->\n// import { Login, SignUp } from \"../components/index\";\n\n\n//method 3 (directly exporting from index.js of components) ----->\nimport { Login, SignUp, About, Profile } from \"../components\";\n\nimport {urls} from \"../config\";\n\nconst routes = [\n    {\n        path: urls.home,\n        exact: true,\n        isProtected: false,\n        component: About\n    },\n    {\n        path: urls.signIn,\n        exact: true,\n        isProtected: false,\n        component: Login\n    },\n    {\n        path: urls.signUp,\n        exact: true,\n        isProtected: false,\n        component: SignUp\n    },\n    {\n        path: urls.profile,\n        exact: true,\n        isProtected: true,\n        component: Profile\n    }\n];\n\nexport default routes;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { urls } from '../config';\nconst PrivateRoute = (props) => {\n  const { component: Component, ...rest } = props;\n  const isAuth = !!localStorage.getItem('access_token');\n  return (\n    <Route\n      {...rest}\n      render={(routeProps)=> {\n        return(\n          isAuth ?\n            <Component {...rest}  {...routeProps} /> :\n            <Redirect to={urls.signIn} />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { urls } from '../config';\n\nconst PublicRoute = (props) => {\n  const { component: Component, ...rest } = props;\n  const isAuth = !!localStorage.getItem('access_token');\n  return (\n    <Route\n      {...rest}\n      render={(routeProps)=> {\n        if (routeProps.location.pathname === urls.home) {\n            return (\n                <Component {...rest}  {...routeProps} />\n            )\n        } else {\n            return(\n            isAuth ?\n                <Redirect to={urls.profile} /> :\n                <Component {...rest}  {...routeProps} />\n            );\n        }\n      }}\n    />\n  );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { urls } from './config';\n\nimport routes from './route/index';\nimport { PublicRoute, PrivateRoute } from './RouteManagement';\n\nfunction App() {\n  return (<Router>\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to={urls.home}>React Demo App</Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={urls.home}>About</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={urls.profile}>Profile</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={urls.signIn}>Sign In</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={urls.signUp}>Sign up</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <Switch>\n            {\n              _.map(routes, (route, idx) => {\n                return (\n                  // let isAuth = !!localStorage.getItem('access_token'),\n                  // // <Route key={idx} {...route}/>\n                  // !route.isProtected ? <Route key={idx} {...route}/> : isAuth ? <Route key={idx} {...route}/> : <Redirect key={9} to='/sign-in' />\n                  route.isProtected ?\n                  <PrivateRoute key={idx} {...route} /> :\n                  <PublicRoute key={idx} {...route} />\n                )\n              })\n            }\n          </Switch>\n        </div>\n      </div>\n    </div></Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}